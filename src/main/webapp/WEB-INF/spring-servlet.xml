<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 有了下面这个标签，上下文注解就能被spring 进行管理 -->
    <context:annotation-config />

    <!-- 启动注解驱动的spring mvc 功能 ，有了这个,@Controller注解的类都会成为spring管理的bean-->
    <mvc:annotation-driven/>

    <mvc:interceptors>
        <bean class="com.mmall.common.HttpInterceptor" />
    </mvc:interceptors>

    <!-- 启动包扫描功能 -->
    <context:component-scan base-package="com.mmall.controller" />
    <context:component-scan base-package="com.mmall.service" />

    <!--<mvc:resources location="/js/" mapping="/js/**"/>-->
    <!--<mvc:resources location="/css/" mapping="/css/**"/>-->
    <!--<mvc:resources location="/bootstrap3.3.5/" mapping="/bootstrap3.3.5/**"/>-->
    <!--<mvc:resources location="/assets/" mapping="/assets/**"/>-->
    <!--<mvc:resources location="/ztree/" mapping="/ztree/**"/>-->

    <bean class="com.mmall.common.ApplicationContextHelper" lazy-init="false" />

    <!-- 让定义好的@RequestMapping注解找到对应的接口进行处理，相当于告诉请求去使用什么样的代码来处理 -->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />-->

    <bean class="com.mmall.common.SpringExceptionResolver" />
    <!-- 当请求来后，我以什么样的数据格式返回给它 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
    <!-- 以json返回的时候用这个类处理 -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
    <!-- 对 jsp 进行处理 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>

</beans>